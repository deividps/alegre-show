[{"/home/ryan/Documentos/Repos/alegre-show/frontend/src/index.js":"1","/home/ryan/Documentos/Repos/alegre-show/frontend/src/App.js":"2","/home/ryan/Documentos/Repos/alegre-show/frontend/src/routes.js":"3","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Landing/index.js":"4","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/EventsList/index.js":"5","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/HousesList/index.js":"6","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Home/index.js":"7","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/House/index.js":"8","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Event/index.js":"9","/home/ryan/Documentos/Repos/alegre-show/frontend/src/services/api.js":"10","/home/ryan/Documentos/Repos/alegre-show/frontend/src/utils/markerIcon.js":"11","/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Navbar/index.js":"12","/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Loading/index.js":"13","/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Footer/index.js":"14","/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Event/index.js":"15"},{"size":198,"mtime":1615354082074,"results":"16","hashOfConfig":"17"},{"size":141,"mtime":1615333483179,"results":"18","hashOfConfig":"17"},{"size":802,"mtime":1615333483187,"results":"19","hashOfConfig":"17"},{"size":2241,"mtime":1615333483187,"results":"20","hashOfConfig":"17"},{"size":2095,"mtime":1615354105500,"results":"21","hashOfConfig":"17"},{"size":1804,"mtime":1615353915375,"results":"22","hashOfConfig":"17"},{"size":6402,"mtime":1615333483187,"results":"23","hashOfConfig":"17"},{"size":6824,"mtime":1615333483187,"results":"24","hashOfConfig":"17"},{"size":8549,"mtime":1615333483187,"results":"25","hashOfConfig":"17"},{"size":125,"mtime":1615355264374,"results":"26","hashOfConfig":"17"},{"size":227,"mtime":1615333483187,"results":"27","hashOfConfig":"17"},{"size":1306,"mtime":1615333483179,"results":"28","hashOfConfig":"17"},{"size":473,"mtime":1615333483179,"results":"29","hashOfConfig":"17"},{"size":396,"mtime":1615333483179,"results":"30","hashOfConfig":"17"},{"size":1033,"mtime":1615333483179,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j1rrlp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/ryan/Documentos/Repos/alegre-show/frontend/src/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/App.js",[],["67","68"],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/routes.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Landing/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/EventsList/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/HousesList/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Home/index.js",["69","70","71","72","73","74","75","76"],"import React, { useEffect, useState } from 'react'\nimport UseAnimations from 'react-useanimations'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { computeDistanceBetween } from 'spherical-geometry-js'\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nimport markerIcon from '../../utils/markerIcon'\n\nimport bookmark from 'react-useanimations/lib/bookmark'\nimport star from 'react-useanimations/lib/star'\nimport alertCircle from 'react-useanimations/lib/alertCircle'\n\nimport EventImg from '../../images/so-track-boa.jpg'\n\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\nimport Event from '../../components/Event'\nimport Loading from '../../components/Loading'\n\nimport api from '../../services/api'\n\nimport './styles.css'\n\nimport Carousel from 'nuka-carousel'\n\nconsole.log('Carousel', Carousel)\nconsole.log('Event', Event)\n\nexport default function Home() {\n   const [position, setPosition] = useState({ latitude: 0, longitude: 0 })\n   const [distance, setDistance] = useState()\n   const history = useHistory()\n   const [events, setEvents] = useState()\n   const [houses, setHouses] = useState()\n\n   useEffect(() => {\n      api.get('events').then(response => {\n         setEvents(response.data)\n      })\n\n      api.get('houses').then(response => {\n         setHouses(response.data)\n      })\n\n      if (!localStorage.getItem('position')) {\n         history.push('/landing')\n      }\n\n      const { lat, lng } = JSON.parse(localStorage.getItem('position'))\n\n      setPosition({\n         latitude: lat,\n         longitude: lng\n      })\n\n      const calculateDistance = computeDistanceBetween(\n         {\n            lat,\n            lng\n         },\n         {\n            latitude: -20.754959481631797,\n            longitude: -41.542656350213385\n         }\n      )\n\n      setDistance(calculateDistance / 1000)\n   }, [])\n\n   if (!events && !houses) {\n      return <Loading />\n   }\n\n   return (\n      <div id=\"home-container\">\n         <Navbar />\n         <main>\n            <h2>Pr√≥ximos Eventos</h2>\n            <div className=\"events-list\">\n               <Carousel\n                  slidesToShow={2}\n                  slidesToScroll={1}\n                  wrapAround=\"true\"\n                  transitionMode=\"scroll3d\"\n                  zoomScale=\"0.9\"\n                  opacityScale=\"0.4\"\n                  frameOverflow=\"visible\"\n                  withoutControls=\"true\"\n               >\n                  {events &&\n                     events.map(event => {\n                        return (\n                           <Event\n                              id={event.id}\n                              key={event.id}\n                              title={event.title}\n                              thumb={event.thumb_img}\n                              description={event.description}\n                              date={event.start_date}\n                           />\n                        )\n                     })}\n               </Carousel>\n            </div>\n\n            <h2>Mapa de Eventos</h2>\n            <div className=\"location\">\n               <Map\n                  center={[-20.754959481631797, -41.542656350213385]}\n                  zoom={15}\n                  style={{ width: '100%', height: '100%' }}\n               >\n                  <TileLayer\n                     url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoicnlhbm1hdHRvcyIsImEiOiJja2llcDMxMHgwZWV4MnBxd3VkeXFvcTI4In0.uRDTBT6TGyiSIiIoCzzfXw`}\n                     opacity={1}\n                     zIndex={10}\n                  />\n                  {events &&\n                     events.map(event => {\n                        return (\n                           <Marker\n                              key={event.id}\n                              icon={markerIcon}\n                              position={[event.latitude, event.longitude]}\n                           >\n                              <Popup\n                                 closeButton={false}\n                                 minWidth={200}\n                                 maxWidth={200}\n                                 className=\"map-popup\"\n                              >\n                                 <span>{event.title}</span>\n                                 <Link to={`/event/${event.id}`}>\n                                    <FontAwesomeIcon icon={faArrowRight} />\n                                 </Link>\n                              </Popup>\n                           </Marker>\n                        )\n                     })}\n               </Map>\n            </div>\n            {/* <article className=\"news\">\n               <header>\n                  <img src={EventImg} alt=\"evento\" />\n               </header>\n               <main>\n                  <h2>S√≥ Track Boa Festival</h2>\n                  <p>\n                     Organizado pelo DJ Vintage Cultura, o S√≥ Track Boa √© um...\n                  </p>\n               </main>\n               <footer className=\"news-button-container\">\n                  <button id=\"interested\">\n                     <UseAnimations\n                        animation={bookmark}\n                        size={20}\n                        strokeColor=\"#ff3158\"\n                        loop={true}\n                        reverse={true}\n                        speed={0.2}\n                     />\n                     <span> Tenho interesse</span>\n                  </button>\n                  <button id=\"going\">\n                     <UseAnimations\n                        animation={star}\n                        size={20}\n                        strokeColor=\"#02e345\"\n                        loop={true}\n                        speed={0.2}\n                     />\n                     <span> Eu vou ir</span>\n                  </button>\n                  <button id=\"more\">\n                     <UseAnimations\n                        animation={alertCircle}\n                        size={20}\n                        strokeColor=\"#0ab7f7\"\n                     />\n                     <span> Quero saber mais</span>\n                  </button>\n               </footer>\n            </article> */}\n         </main>\n         <Footer />\n      </div>\n   )\n}\n","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/House/index.js",["77","78","79"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { computeDistanceBetween } from 'spherical-geometry-js'\n\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\nimport Loading from '../../components/Loading'\n\nimport raveImg from '../../images/rave.jpg'\nimport eventImg from '../../images/so-track-boa.jpg'\n\nimport markerIcon from '../../utils/markerIcon'\n\nimport {\n   faCalendarAlt,\n   faClock,\n   faMoneyBillAlt,\n   faStar,\n   faBookmark,\n   faCheckCircle\n} from '@fortawesome/free-regular-svg-icons'\n\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nimport api from '../../services/api'\n\nimport './styles.css'\n\nexport default function House() {\n   const params = useParams()\n   const history = useHistory()\n   const [position, setPosition] = useState({ lat: 0, lng: 0 })\n   const [distance, setDistance] = useState()\n   const [house, setHouse] = useState()\n   const [houseImages, setHouseImages] = useState([])\n   const [events, setEvents] = useState()\n\n   useEffect(() => {\n      const pos = JSON.parse(localStorage.getItem('position'))\n\n      if (!pos) {\n         history.push('/landing')\n      }\n\n      api.get(`house/${params.id}`).then(response => {\n         setHouse(response.data[0])\n      })\n\n      api.get(`images/house/${params.id}`).then(response => {\n         setHouseImages(response.data)\n      })\n\n      api.get(`event/byhouse/${params.id}`).then(response => {\n         setEvents(response.data)\n      })\n\n      setPosition(pos)\n   }, [params.id])\n\n   if (!house) {\n      return <Loading />\n   }\n\n   function handleCalculateDistance(pos, ev) {\n      if (!distance) {\n         const calculateDistance = computeDistanceBetween(pos, {\n            lat: ev.latitude,\n            lng: ev.longitude\n         })\n\n         let formatted =\n            Math.round((calculateDistance + Number.EPSILON) * 100) / 100\n         if (calculateDistance > 500) {\n            formatted =\n               Math.round((formatted / 1000 + Number.EPSILON) * 100) / 100\n            formatted += 'km'\n         } else {\n            formatted += 'm'\n         }\n\n         setDistance(formatted)\n      }\n   }\n\n   return (\n      <div id=\"house-container\">\n         <Navbar />\n         <main>\n            <div className=\"info\">\n               <Carousel>\n                  {houseImages &&\n                     houseImages.map(image => {\n                        return (\n                           <div key={image.id}>\n                              <img\n                                 src={`http://localhost:3333/uploads/${image.image}`}\n                                 alt={image.id}\n                              />\n                           </div>\n                        )\n                     })}\n               </Carousel>\n\n               <div className=\"images\"></div>\n               <h2>{house.name}</h2>\n               <p>{house.description}</p>\n            </div>\n            <div className=\"secondary-info\">\n               <div>\n                  <FontAwesomeIcon icon={faClock} id=\"openHour\" />\n                  {house.open_hour}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faCalendarAlt} id=\"open\" />\n                  {house.open_day}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faMoneyBillAlt} id=\"price\" />\n                  {house.price}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faStar} id=\"rate\" />\n                  {house.rate}\n               </div>\n            </div>\n            <h2>Localiza√ß√£o</h2>\n            <div className=\"location\">\n               {house && handleCalculateDistance(position, house)}\n               <span>A {house && distance} de voc√™.</span>\n               <Map\n                  center={[house.latitude, house.longitude]}\n                  zoom={15}\n                  style={{ width: '100%', height: '100%' }}\n               >\n                  <TileLayer\n                     url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoicnlhbm1hdHRvcyIsImEiOiJja2llcDMxMHgwZWV4MnBxd3VkeXFvcTI4In0.uRDTBT6TGyiSIiIoCzzfXw`}\n                     opacity={1}\n                     zIndex={10}\n                  />\n                  <Marker\n                     key=\"1\"\n                     icon={markerIcon}\n                     position={[house.latitude, house.longitude]}\n                  >\n                     <Popup\n                        closeButton={false}\n                        minWidth={200}\n                        maxWidth={200}\n                        className=\"map-popup\"\n                     >\n                        <span>{house.name}</span>\n                        <a\n                           href={`https://www.google.com/maps/dir/?api=1&destination=${house.latitude},${house.longitude}`}\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                        >\n                           <FontAwesomeIcon icon={faArrowRight} />\n                        </a>\n                     </Popup>\n                  </Marker>\n               </Map>\n            </div>\n            <h2>Eventos</h2>\n            <div className=\"events-list\">\n               {events &&\n                  events.map(event => {\n                     return (\n                        <div className=\"event\" key={event.id}>\n                           <img\n                              src={`http://localhost:3333/uploads/${event.thumb_img}`}\n                              alt={event.title}\n                           />\n                           <div className=\"event-info\">\n                              <h2>{event.title}</h2>\n                              <p>{event.start_date}</p>\n                           </div>\n                           <p>{event.description}</p>\n                           <div className=\"buttons\">\n                              <button id=\"interested\">\n                                 <FontAwesomeIcon icon={faBookmark} />\n                                 Tenho interesse\n                              </button>\n                              <button id=\"going\">\n                                 <FontAwesomeIcon icon={faCheckCircle} />\n                                 Eu vou ir\n                              </button>\n                           </div>\n                        </div>\n                     )\n                  })}\n            </div>\n         </main>\n         <Footer />\n      </div>\n   )\n}\n","/home/ryan/Documentos/Repos/alegre-show/frontend/src/pages/Event/index.js",["80"],"import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport UseAnimations from 'react-useanimations'\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\nimport { computeDistanceBetween } from 'spherical-geometry-js'\n\nimport Navbar from '../../components/Navbar'\nimport Footer from '../../components/Footer'\nimport Loading from '../../components/Loading'\n\nimport { Carousel } from 'react-responsive-carousel'\n\nimport markerIcon from '../../utils/markerIcon'\n\nimport {\n   faCalendarAlt,\n   faClock,\n   faStar,\n   faCheckCircle\n} from '@fortawesome/free-regular-svg-icons'\n\nimport {\n   faTicketAlt,\n   faGlassCheers,\n   faFire\n} from '@fortawesome/free-solid-svg-icons'\n\nimport alertCircle from 'react-useanimations/lib/alertCircle'\n\nimport './styles.css'\nimport api from '../../services/api'\n\nexport default function Event() {\n   const params = useParams()\n   const history = useHistory()\n   const [position, setPosition] = useState({ lat: 0, lng: 0 })\n   const [distance, setDistance] = useState()\n   const [event, setEvent] = useState()\n   const [eventImages, setEventImages] = useState()\n   const [reviews, setReviews] = useState()\n   const [attractions, setAttractions] = useState()\n\n   useEffect(() => {\n      const pos = JSON.parse(localStorage.getItem('position'))\n\n      if (!pos) {\n         history.push('/landing')\n      }\n\n      async function fetch() {\n         await api.get(`event/${params.id}`).then(response => {\n            setEvent(response.data[0])\n         })\n\n         await api.get(`images/event/${params.id}`).then(response => {\n            setEventImages(response.data)\n         })\n\n         await api.get(`reviews/event/${params.id}`).then(response => {\n            setReviews(response.data)\n         })\n\n         await api.get(`attractions/event/${params.id}`).then(response => {\n            setAttractions(response.data)\n         })\n      }\n      fetch()\n\n      setPosition(pos)\n   }, [params.id])\n\n   if (!event) {\n      return <Loading />\n   }\n\n   function handleCalculateDistance(pos, ev) {\n      if (!distance) {\n         const calculateDistance = computeDistanceBetween(pos, {\n            lat: ev.latitude,\n            lng: ev.longitude\n         })\n\n         let formatted =\n            Math.round((calculateDistance + Number.EPSILON) * 100) / 100\n         if (calculateDistance > 500) {\n            formatted =\n               Math.round((formatted / 1000 + Number.EPSILON) * 100) / 100\n            formatted += 'km'\n         } else {\n            formatted += 'm'\n         }\n\n         setDistance(formatted)\n      }\n   }\n\n   return (\n      <div id=\"event-container\">\n         <Navbar />\n         <main>\n            <div className=\"info\">\n               <Carousel>\n                  {eventImages &&\n                     eventImages.map(image => {\n                        return (\n                           <div key={image.id}>\n                              <img\n                                 src={`http://localhost:3333/uploads/${image.image}`}\n                                 alt={image.id}\n                              />\n                           </div>\n                        )\n                     })}\n               </Carousel>\n               <h2>{event.title}</h2>\n               <p>{event.description}</p>\n               <div className=\"side-buttons\">\n                  <ul>\n                     <li>\n                        <button title=\"Eu vou!\" id=\"going\">\n                           <FontAwesomeIcon icon={faFire} />\n                        </button>\n                     </li>\n                     <li>\n                        <button title=\"Estou interessado!\" id=\"interested\">\n                           <FontAwesomeIcon icon={faCheckCircle} />\n                        </button>\n                     </li>\n                  </ul>\n               </div>\n            </div>\n            <div className=\"secondary-info\">\n               <div>\n                  <FontAwesomeIcon icon={faClock} id=\"time\" />\n                  {event.start_hour}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faCalendarAlt} id=\"date\" />\n                  {event.start_date}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faTicketAlt} id=\"ticket\" />\n                  R$ {event.price}\n               </div>\n               <div>\n                  <FontAwesomeIcon icon={faGlassCheers} id=\"open\" />\n                  {event.is_open_bar === 'true' ? 'Open Bar' : 'Sem Open'}\n               </div>\n            </div>\n            <div className=\"info ps\">\n               <h3 className=\"title\">\n                  <UseAnimations\n                     animation={alertCircle}\n                     size={34}\n                     strokeColor=\"rgba(255, 49, 88, 0.4)\"\n                  />\n                  Observa√ß√µes\n               </h3>\n               <p>{event.ps}</p>\n            </div>\n            <h2>Principais Atra√ß√µes</h2>\n            <div className=\"attractions-list\">\n               {attractions &&\n                  attractions.map(attraction => {\n                     return (\n                        <div className=\"attraction\" key={attraction.id}>\n                           <img\n                              src={`http://localhost:3333/uploads/${attraction.image}`}\n                              alt={attraction.name}\n                           />\n                           <div className=\"attraction-info\">\n                              <h3>{attraction.name}</h3>\n                              <p>{attraction.description}</p>\n                           </div>\n                        </div>\n                     )\n                  })}\n            </div>\n            <h2>Localiza√ß√£o</h2>\n            <div className=\"location\">\n               {event && handleCalculateDistance(position, event)}\n               <span>A {event && distance} de voc√™.</span>\n               <Map\n                  center={[event.latitude, event.longitude]}\n                  zoom={15}\n                  style={{ width: '100%', height: '100%' }}\n               >\n                  <TileLayer\n                     url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoicnlhbm1hdHRvcyIsImEiOiJja2llcDMxMHgwZWV4MnBxd3VkeXFvcTI4In0.uRDTBT6TGyiSIiIoCzzfXw`}\n                     opacity={1}\n                     zIndex={10}\n                  />\n                  <Marker\n                     key=\"1\"\n                     icon={markerIcon}\n                     position={[event.latitude, event.longitude]}\n                  >\n                     <Popup\n                        closeButton={false}\n                        minWidth={200}\n                        maxWidth={200}\n                        className=\"map-popup\"\n                     >\n                        {event.title}\n                        <a\n                           href={`https://www.google.com/maps/dir/?api=1&destination=${event.latitude},${event.longitude}`}\n                           target=\"_blank\"\n                           rel=\"noreferrer\"\n                        >\n                           Ver no maps\n                        </a>\n                     </Popup>\n                  </Marker>\n               </Map>\n            </div>\n            <h2>Reviews</h2>\n            <div className=\"reviews-list\">\n               {reviews &&\n                  reviews.map(review => {\n                     return (\n                        <div className=\"review\" key={review.id}>\n                           <img\n                              src={`http://localhost:3333/uploads/${review.image}`}\n                              alt={review.name}\n                           />\n                           <div className=\"review-info\">\n                              <h3>{review.name}</h3>\n                              <span>\n                                 <FontAwesomeIcon icon={faStar} />\n                                 {review.rate}/10\n                              </span>\n                              <p>\"{review.review}\"</p>\n                              <sub>\n                                 - Entrevistada no {review.interviewed_at} do\n                                 evento.\n                              </sub>\n                           </div>\n                        </div>\n                     )\n                  })}\n            </div>\n         </main>\n         <Footer />\n      </div>\n   )\n}\n","/home/ryan/Documentos/Repos/alegre-show/frontend/src/services/api.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/utils/markerIcon.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Navbar/index.js",["81","82","83","84"],"import React, { useState } from 'react'\nimport UseAnimations from 'react-useanimations'\nimport { Link } from 'react-router-dom'\n\nimport searchToX from 'react-useanimations/lib/searchToX'\n\nimport logoImg from '../../images/beer.svg'\n\nimport './styles.css'\n\nexport default function Navbar() {\n   const [expandedSearch, setExpandedSearch] = useState(false)\n\n   return (\n      <nav>\n         <span>\n            <Link to=\"/\">\n               <img src={logoImg} alt=\"logo\" />\n            </Link>\n         </span>\n         <ul>\n            <li>\n               <Link to=\"/houses\">Casas de show</Link>\n            </li>\n            <li>\n               <Link to=\"/events\">Eventos</Link>\n            </li>\n            {/* <li\n               className=\"search\"\n               onClick={e => {\n                  document.getElementById('search-icon').click()\n               }}\n            >\n               <input\n                  type=\"text\"\n                  className={expandedSearch ? 'expanded' : ''}\n                  placeholder=\"Procure por eventos\"\n               />\n               <UseAnimations\n                  id=\"search-icon\"\n                  animation={searchToX}\n                  size={20}\n                  strokeColor=\"#fff\"\n               />\n            </li> */}\n         </ul>\n      </nav>\n   )\n}\n","/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Loading/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Footer/index.js",[],"/home/ryan/Documentos/Repos/alegre-show/frontend/src/components/Event/index.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"93","line":14,"column":8,"nodeType":"91","messageId":"92","endLine":14,"endColumn":16},{"ruleId":"89","severity":1,"message":"94","line":15,"column":8,"nodeType":"91","messageId":"92","endLine":15,"endColumn":12},{"ruleId":"89","severity":1,"message":"95","line":16,"column":8,"nodeType":"91","messageId":"92","endLine":16,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":18,"column":8,"nodeType":"91","messageId":"92","endLine":18,"endColumn":16},{"ruleId":"89","severity":1,"message":"97","line":35,"column":11,"nodeType":"91","messageId":"92","endLine":35,"endColumn":19},{"ruleId":"89","severity":1,"message":"98","line":36,"column":11,"nodeType":"91","messageId":"92","endLine":36,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":73,"column":7,"nodeType":"101","endLine":73,"endColumn":9,"suggestions":"102"},{"ruleId":"89","severity":1,"message":"103","line":16,"column":8,"nodeType":"91","messageId":"92","endLine":16,"endColumn":15},{"ruleId":"89","severity":1,"message":"104","line":17,"column":8,"nodeType":"91","messageId":"92","endLine":17,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":65,"column":7,"nodeType":"101","endLine":65,"endColumn":18,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"100","line":73,"column":7,"nodeType":"101","endLine":73,"endColumn":18,"suggestions":"106"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"89","severity":1,"message":"107","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":17},{"ruleId":"89","severity":1,"message":"108","line":12,"column":11,"nodeType":"91","messageId":"92","endLine":12,"endColumn":25},{"ruleId":"89","severity":1,"message":"109","line":12,"column":27,"nodeType":"91","messageId":"92","endLine":12,"endColumn":44},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'UseAnimations' is defined but never used.","Identifier","unusedVar","'bookmark' is defined but never used.","'star' is defined but never used.","'alertCircle' is defined but never used.","'EventImg' is defined but never used.","'position' is assigned a value but never used.","'distance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'raveImg' is defined but never used.","'eventImg' is defined but never used.",["113"],["114"],"'searchToX' is defined but never used.","'expandedSearch' is assigned a value but never used.","'setExpandedSearch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [history]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, params.id]",{"range":"122","text":"123"},{"range":"124","text":"123"},[2009,2011],"[history]",[1814,1825],"[history, params.id]",[2042,2053]]