[{"C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\App.js":"1","C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\House\\index.js":"2","C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\HousesList\\index.js":"3","C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\Event\\index.js":"4","C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\EventsList\\index.js":"5"},{"size":152,"mtime":1607344734967,"results":"6","hashOfConfig":"7"},{"size":5653,"mtime":1608866083385,"results":"8","hashOfConfig":"7"},{"size":1880,"mtime":1609426048864,"results":"9","hashOfConfig":"7"},{"size":7273,"mtime":1608659250059,"results":"10","hashOfConfig":"7"},{"size":1857,"mtime":1609426316150,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kg1fss",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\App.js",[],["24","25"],"C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\House\\index.js",["26","27","28"],"C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\HousesList\\index.js",["29","30"],"C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\Event\\index.js",["31","32","33","34","35"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport UseAnimations from 'react-useanimations'\r\n\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\n\r\nimport Navbar from '../../components/Navbar'\r\nimport Footer from '../../components/Footer'\r\nimport { Carousel } from 'react-responsive-carousel'\r\n\r\nimport eventImg from '../../images/so-track-boa.jpg'\r\nimport vintageImg from '../../images/vintage.jpg'\r\nimport womanImg from '../../images/woman.jpg'\r\nimport woman2Img from '../../images/woman2.jpg'\r\nimport kvshImg from '../../images/kvsh.jpg'\r\n\r\nimport markerIcon from '../../utils/markerIcon'\r\n\r\nimport {\r\n   faCalendarAlt,\r\n   faClock,\r\n   faStar\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport { faTicketAlt, faGlassCheers } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport alertCircle from 'react-useanimations/lib/alertCircle'\r\n\r\nimport './styles.css'\r\nimport api from '../../services/api'\r\n\r\nexport default function Event() {\r\n   const params = useParams()\r\n   const [event, setEvent] = useState()\r\n   const [eventImages, setEventImages] = useState()\r\n   const [reviews, setReviews] = useState()\r\n   const [attractions, setAttractions] = useState()\r\n\r\n   useEffect(() => {\r\n      async function fetch() {\r\n         await api.get(`event/${params.id}`).then(response => {\r\n            setEvent(response.data[0])\r\n         })\r\n\r\n         await api.get(`images/event/${params.id}`).then(response => {\r\n            setEventImages(response.data)\r\n         })\r\n\r\n         await api.get(`reviews/event/${params.id}`).then(response => {\r\n            setReviews(response.data)\r\n         })\r\n\r\n         await api.get(`attractions/event/${params.id}`).then(response => {\r\n            setAttractions(response.data)\r\n         })\r\n      }\r\n      fetch()\r\n   }, [params.id])\r\n\r\n   if (!event) {\r\n      return <p>Loading...</p>\r\n   }\r\n\r\n   console.log(event)\r\n\r\n   return (\r\n      <div id=\"event-container\">\r\n         <Navbar />\r\n         <main>\r\n            <div className=\"info\">\r\n               <Carousel>\r\n                  {eventImages &&\r\n                     eventImages.map(image => {\r\n                        return (\r\n                           <div>\r\n                              <img\r\n                                 src={`http://localhost:3333/uploads/${image.image}`}\r\n                                 alt={image.id}\r\n                              />\r\n                           </div>\r\n                        )\r\n                     })}\r\n               </Carousel>\r\n               <h2>{event.title}</h2>\r\n               <p>{event.description}</p>\r\n            </div>\r\n            <div className=\"secondary-info\">\r\n               <div>\r\n                  <FontAwesomeIcon icon={faClock} id=\"time\" />\r\n                  {event.start_hour}\r\n               </div>\r\n               <div>\r\n                  <FontAwesomeIcon icon={faCalendarAlt} id=\"date\" />\r\n                  {event.start_date}\r\n               </div>\r\n               <div>\r\n                  <FontAwesomeIcon icon={faTicketAlt} id=\"ticket\" />\r\n                  R$ {event.price}\r\n               </div>\r\n               <div>\r\n                  <FontAwesomeIcon icon={faGlassCheers} id=\"open\" />\r\n                  {event.is_open_bar === 'true' ? 'Open Bar' : 'Sem Open Bar'}\r\n               </div>\r\n            </div>\r\n            <div className=\"info ps\">\r\n               <h3 className=\"title\">\r\n                  <UseAnimations\r\n                     animation={alertCircle}\r\n                     size={34}\r\n                     strokeColor=\"rgba(255, 49, 88, 0.4)\"\r\n                  />\r\n                  Observações\r\n               </h3>\r\n               <p>{event.ps}</p>\r\n            </div>\r\n            <h2>Principais Atrações</h2>\r\n            <div className=\"attractions-list\">\r\n               {attractions &&\r\n                  attractions.map(attraction => {\r\n                     return (\r\n                        <div className=\"attraction\" key={attraction.id}>\r\n                           <img\r\n                              src={`http://localhost:3333/uploads/${attraction.image}`}\r\n                              alt={attraction.name}\r\n                           />\r\n                           <div className=\"attraction-info\">\r\n                              <h3>{attraction.name}</h3>\r\n                              <p>{attraction.description}</p>\r\n                           </div>\r\n                        </div>\r\n                     )\r\n                  })}\r\n            </div>\r\n            <h2>Localização</h2>\r\n            <div className=\"location\">\r\n               <Map\r\n                  center={[event.latitude, event.longitude]}\r\n                  zoom={15}\r\n                  style={{ width: '100%', height: '100%' }}\r\n               >\r\n                  <TileLayer\r\n                     url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoicnlhbm1hdHRvcyIsImEiOiJja2llcDMxMHgwZWV4MnBxd3VkeXFvcTI4In0.uRDTBT6TGyiSIiIoCzzfXw`}\r\n                     opacity={1}\r\n                     zIndex={10}\r\n                  />\r\n                  <Marker\r\n                     key=\"1\"\r\n                     icon={markerIcon}\r\n                     position={[event.latitude, event.longitude]}\r\n                  >\r\n                     <Popup\r\n                        closeButton={false}\r\n                        minWidth={200}\r\n                        maxWidth={200}\r\n                        className=\"map-popup\"\r\n                     >\r\n                        Dale\r\n                        <a\r\n                           href={`https://www.google.com/maps/dir/?api=1&destination=${event.latitude},${event.longitude}`}\r\n                           target=\"_blank\"\r\n                           rel=\"noreferrer\"\r\n                        >\r\n                           Ver no maps\r\n                        </a>\r\n                     </Popup>\r\n                  </Marker>\r\n               </Map>\r\n            </div>\r\n            <h2>Reviews</h2>\r\n            <div className=\"reviews-list\">\r\n               {reviews &&\r\n                  reviews.map(review => {\r\n                     return (\r\n                        <div className=\"review\">\r\n                           <img\r\n                              src={`http://localhost:3333/uploads/${review.image}`}\r\n                              alt={review.name}\r\n                           />\r\n                           <div className=\"review-info\">\r\n                              <h3>{review.name}</h3>\r\n                              <span>\r\n                                 <FontAwesomeIcon icon={faStar} />\r\n                                 {review.rate}/10\r\n                              </span>\r\n                              <p>\"{review.review}\"</p>\r\n                              <sub>\r\n                                 - Entrevistada no {review.interviewed_at} do\r\n                                 evento.\r\n                              </sub>\r\n                           </div>\r\n                        </div>\r\n                     )\r\n                  })}\r\n            </div>\r\n         </main>\r\n         <Footer />\r\n      </div>\r\n   )\r\n}\r\n","C:\\Users\\NOTE_187\\Project\\alegre-show\\frontend\\src\\pages\\EventsList\\index.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":35,"column":11,"nodeType":"42","messageId":"43","endLine":35,"endColumn":17},{"ruleId":"40","severity":1,"message":"44","line":36,"column":11,"nodeType":"42","messageId":"43","endLine":36,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":36,"column":24,"nodeType":"42","messageId":"43","endLine":36,"endColumn":38},{"ruleId":"40","severity":1,"message":"46","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":16},{"ruleId":"40","severity":1,"message":"47","line":8,"column":8,"nodeType":"42","messageId":"43","endLine":8,"endColumn":15},{"ruleId":"40","severity":1,"message":"48","line":12,"column":8,"nodeType":"42","messageId":"43","endLine":12,"endColumn":16},{"ruleId":"40","severity":1,"message":"49","line":13,"column":8,"nodeType":"42","messageId":"43","endLine":13,"endColumn":18},{"ruleId":"40","severity":1,"message":"50","line":14,"column":8,"nodeType":"42","messageId":"43","endLine":14,"endColumn":16},{"ruleId":"40","severity":1,"message":"51","line":15,"column":8,"nodeType":"42","messageId":"43","endLine":15,"endColumn":17},{"ruleId":"40","severity":1,"message":"52","line":16,"column":8,"nodeType":"42","messageId":"43","endLine":16,"endColumn":15},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'events' is assigned a value but never used.","Identifier","unusedVar","'eventImages' is assigned a value but never used.","'setEventImages' is assigned a value but never used.","'houseImg' is defined but never used.","'raveImg' is defined but never used.","'eventImg' is defined but never used.","'vintageImg' is defined but never used.","'womanImg' is defined but never used.","'woman2Img' is defined but never used.","'kvshImg' is defined but never used.","no-global-assign","no-unsafe-negation"]